   1                     ; C Compiler for STM8 (COSMIC Software)
   2                     ; Parser V4.11.14 - 18 Nov 2019
   3                     ; Generator (Limited) V4.4.11 - 19 Nov 2019
   4                     ; Optimizer V4.4.11 - 19 Nov 2019
  17                     .const:	section	.text
  18  ace2               L31_broadcast_ethaddr:
  19  ace2 ff            	dc.b	255
  20  ace3 ff            	dc.b	255
  21  ace4 ff            	dc.b	255
  22  ace5 ff            	dc.b	255
  23  ace6 ff            	dc.b	255
  24  ace7 ff            	dc.b	255
  25  ace8               L51_broadcast_ipaddr:
  26  ace8 ffff          	dc.w	-1
  27  acea ffff          	dc.w	-1
  59                     ; 145 uip_arp_init(void)
  59                     ; 146 {
  61                     	switch	.text
  62  daf3               _uip_arp_init:
  66                     ; 147   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
  68  daf3 4f            	clr	a
  69  daf4 c70564        	ld	L32_i,a
  70  daf7               L15:
  71                     ; 148     memset(arp_table[i].ipaddr, 0, 4);
  73  daf7 97            	ld	xl,a
  74  daf8 a60b          	ld	a,#11
  75  dafa 42            	mul	x,a
  76  dafb 1c0569        	addw	x,#L71_arp_table
  77  dafe bf04          	ldw	c_x,x
  78  db00 ae0004        	ldw	x,#4
  79  db03               L6:
  80  db03 5a            	decw	x
  81  db04 926f04        	clr	([c_x.w],x)
  82  db07 5d            	tnzw	x
  83  db08 26f9          	jrne	L6
  84                     ; 147   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
  86  db0a 725c0564      	inc	L32_i
  89  db0e c60564        	ld	a,L32_i
  90  db11 a108          	cp	a,#8
  91  db13 25e2          	jrult	L15
  92                     ; 150 }
  95  db15 81            	ret	
 187                     ; 164 uip_arp_timer(void)
 187                     ; 165 {
 188                     	switch	.text
 189  db16               _uip_arp_timer:
 191  db16 89            	pushw	x
 192       00000002      OFST:	set	2
 195                     ; 168   ++arptime;
 197  db17 725c0562      	inc	L72_arptime
 198                     ; 169   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 200  db1b 4f            	clr	a
 201  db1c c70564        	ld	L32_i,a
 202  db1f               L521:
 203                     ; 170     tabptr = &arp_table[i];
 205  db1f 97            	ld	xl,a
 206  db20 a60b          	ld	a,#11
 207  db22 42            	mul	x,a
 208  db23 1c0569        	addw	x,#L71_arp_table
 209  db26 1f01          	ldw	(OFST-1,sp),x
 211                     ; 171     if((tabptr->ipaddr[0] | tabptr->ipaddr[1]) != 0 &&
 211                     ; 172        arptime - tabptr->time >= UIP_ARP_MAXAGE) {
 213  db28 1601          	ldw	y,(OFST-1,sp)
 214  db2a ee02          	ldw	x,(2,x)
 215  db2c 01            	rrwa	x,a
 216  db2d 90ea01        	or	a,(1,y)
 217  db30 01            	rrwa	x,a
 218  db31 90fa          	or	a,(y)
 219  db33 01            	rrwa	x,a
 220  db34 5d            	tnzw	x
 221  db35 271e          	jreq	L331
 223  db37 c60562        	ld	a,L72_arptime
 224  db3a 5f            	clrw	x
 225  db3b 90e00a        	sub	a,(10,y)
 226  db3e 2401          	jrnc	L21
 227  db40 5a            	decw	x
 228  db41               L21:
 229  db41 02            	rlwa	x,a
 230  db42 a30078        	cpw	x,#120
 231  db45 2f0e          	jrslt	L331
 232                     ; 173       memset(tabptr->ipaddr, 0, 4);
 234  db47 1e01          	ldw	x,(OFST-1,sp)
 235  db49 bf04          	ldw	c_x,x
 236  db4b ae0004        	ldw	x,#4
 237  db4e               L41:
 238  db4e 5a            	decw	x
 239  db4f 926f04        	clr	([c_x.w],x)
 240  db52 5d            	tnzw	x
 241  db53 26f9          	jrne	L41
 242  db55               L331:
 243                     ; 169   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 245  db55 725c0564      	inc	L32_i
 248  db59 c60564        	ld	a,L32_i
 249  db5c a108          	cp	a,#8
 250  db5e 25bf          	jrult	L521
 251                     ; 177 }
 254  db60 85            	popw	x
 255  db61 81            	ret	
 320                     ; 182 uip_arp_update(uint16_t *ipaddr, struct uip_eth_addr *ethaddr)
 320                     ; 183 {
 321                     	switch	.text
 322  db62               L531_uip_arp_update:
 324  db62 89            	pushw	x
 325  db63 5204          	subw	sp,#4
 326       00000004      OFST:	set	4
 329                     ; 188   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 331  db65 4f            	clr	a
 332  db66 c70564        	ld	L32_i,a
 333  db69               L171:
 334                     ; 190     tabptr = &arp_table[i];
 336  db69 97            	ld	xl,a
 337  db6a a60b          	ld	a,#11
 338  db6c 42            	mul	x,a
 339  db6d 1c0569        	addw	x,#L71_arp_table
 340  db70 1f03          	ldw	(OFST-1,sp),x
 342                     ; 192     if(tabptr->ipaddr[0] != 0 &&
 342                     ; 193        tabptr->ipaddr[1] != 0) {
 344  db72 e601          	ld	a,(1,x)
 345  db74 fa            	or	a,(x)
 346  db75 2733          	jreq	L771
 348  db77 e603          	ld	a,(3,x)
 349  db79 ea02          	or	a,(2,x)
 350  db7b 272d          	jreq	L771
 351                     ; 197       if(ipaddr[0] == tabptr->ipaddr[0] &&
 351                     ; 198 	 ipaddr[1] == tabptr->ipaddr[1]) {
 353  db7d 1e05          	ldw	x,(OFST+1,sp)
 354  db7f 1603          	ldw	y,(OFST-1,sp)
 355  db81 fe            	ldw	x,(x)
 356  db82 90f3          	cpw	x,(y)
 357  db84 2624          	jrne	L771
 359  db86 1e05          	ldw	x,(OFST+1,sp)
 360  db88 ee02          	ldw	x,(2,x)
 361  db8a 90e302        	cpw	x,(2,y)
 362  db8d 261b          	jrne	L771
 363                     ; 201 	memcpy(tabptr->ethaddr.addr, ethaddr->addr, 6);
 365  db8f 93            	ldw	x,y
 366  db90 1c0004        	addw	x,#4
 367  db93 bf04          	ldw	c_x,x
 368  db95 1609          	ldw	y,(OFST+5,sp)
 369  db97 90bf07        	ldw	c_y,y
 370  db9a ae0006        	ldw	x,#6
 371  db9d               L02:
 372  db9d 5a            	decw	x
 373  db9e 92d607        	ld	a,([c_y.w],x)
 374  dba1 92d704        	ld	([c_x.w],x),a
 375  dba4 5d            	tnzw	x
 376  dba5 26f6          	jrne	L02
 377                     ; 202 	tabptr->time = arptime;
 378                     ; 204 	return;
 380  dba7 ccdc63        	jra	L03
 381  dbaa               L771:
 382                     ; 188   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 384  dbaa 725c0564      	inc	L32_i
 387  dbae c60564        	ld	a,L32_i
 388  dbb1 a108          	cp	a,#8
 389  dbb3 25b4          	jrult	L171
 390                     ; 213   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 392  dbb5 4f            	clr	a
 393  dbb6 c70564        	ld	L32_i,a
 394  dbb9               L302:
 395                     ; 214     tabptr = &arp_table[i];
 397  dbb9 97            	ld	xl,a
 398  dbba a60b          	ld	a,#11
 399  dbbc 42            	mul	x,a
 400  dbbd 1c0569        	addw	x,#L71_arp_table
 401  dbc0 1f03          	ldw	(OFST-1,sp),x
 403                     ; 215     if(tabptr->ipaddr[0] == 0 &&
 403                     ; 216        tabptr->ipaddr[1] == 0) {
 405  dbc2 e601          	ld	a,(1,x)
 406  dbc4 fa            	or	a,(x)
 407  dbc5 2606          	jrne	L112
 409  dbc7 e603          	ld	a,(3,x)
 410  dbc9 ea02          	or	a,(2,x)
 411  dbcb 270b          	jreq	L702
 412                     ; 217       break;
 414  dbcd               L112:
 415                     ; 213   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 417  dbcd 725c0564      	inc	L32_i
 420  dbd1 c60564        	ld	a,L32_i
 421  dbd4 a108          	cp	a,#8
 422  dbd6 25e1          	jrult	L302
 423  dbd8               L702:
 424                     ; 223   if(i == UIP_ARPTAB_SIZE) {
 426  dbd8 c60564        	ld	a,L32_i
 427  dbdb a108          	cp	a,#8
 428  dbdd 2657          	jrne	L312
 429                     ; 224     tmpage = 0;
 431  dbdf 725f0561      	clr	L13_tmpage
 432                     ; 225     c = 0;
 434  dbe3 725f0563      	clr	L52_c
 435                     ; 226     for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 437  dbe7 4f            	clr	a
 438  dbe8 c70564        	ld	L32_i,a
 439  dbeb               L512:
 440                     ; 227       tabptr = &arp_table[i];
 442  dbeb 97            	ld	xl,a
 443  dbec a60b          	ld	a,#11
 444  dbee 42            	mul	x,a
 445  dbef 1c0569        	addw	x,#L71_arp_table
 446  dbf2 1f03          	ldw	(OFST-1,sp),x
 448                     ; 228       if(arptime - tabptr->time > tmpage) {
 450  dbf4 5f            	clrw	x
 451  dbf5 c60561        	ld	a,L13_tmpage
 452  dbf8 97            	ld	xl,a
 453  dbf9 1f01          	ldw	(OFST-3,sp),x
 455  dbfb 5f            	clrw	x
 456  dbfc 1603          	ldw	y,(OFST-1,sp)
 457  dbfe c60562        	ld	a,L72_arptime
 458  dc01 90e00a        	sub	a,(10,y)
 459  dc04 2401          	jrnc	L22
 460  dc06 5a            	decw	x
 461  dc07               L22:
 462  dc07 02            	rlwa	x,a
 463  dc08 1301          	cpw	x,(OFST-3,sp)
 464  dc0a 2d10          	jrsle	L322
 465                     ; 229 	tmpage = (uint8_t)(arptime - tabptr->time);
 467  dc0c 1e03          	ldw	x,(OFST-1,sp)
 468  dc0e e60a          	ld	a,(10,x)
 469  dc10 c00562        	sub	a,L72_arptime
 470  dc13 40            	neg	a
 471  dc14 c70561        	ld	L13_tmpage,a
 472                     ; 230 	c = i;
 474  dc17 5505640563    	mov	L52_c,L32_i
 475  dc1c               L322:
 476                     ; 226     for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 478  dc1c 725c0564      	inc	L32_i
 481  dc20 c60564        	ld	a,L32_i
 482  dc23 a108          	cp	a,#8
 483  dc25 25c4          	jrult	L512
 484                     ; 233     i = c;
 486  dc27 c60563        	ld	a,L52_c
 487  dc2a c70564        	ld	L32_i,a
 488                     ; 234     tabptr = &arp_table[i];
 490  dc2d 97            	ld	xl,a
 491  dc2e a60b          	ld	a,#11
 492  dc30 42            	mul	x,a
 493  dc31 1c0569        	addw	x,#L71_arp_table
 494  dc34 1f03          	ldw	(OFST-1,sp),x
 496  dc36               L312:
 497                     ; 239   memcpy(tabptr->ipaddr, ipaddr, 4);
 499  dc36 bf04          	ldw	c_x,x
 500  dc38 1605          	ldw	y,(OFST+1,sp)
 501  dc3a 90bf07        	ldw	c_y,y
 502  dc3d ae0004        	ldw	x,#4
 503  dc40               L42:
 504  dc40 5a            	decw	x
 505  dc41 92d607        	ld	a,([c_y.w],x)
 506  dc44 92d704        	ld	([c_x.w],x),a
 507  dc47 5d            	tnzw	x
 508  dc48 26f6          	jrne	L42
 509                     ; 240   memcpy(tabptr->ethaddr.addr, ethaddr->addr, 6);
 511  dc4a 1e03          	ldw	x,(OFST-1,sp)
 512  dc4c 1c0004        	addw	x,#4
 513  dc4f bf04          	ldw	c_x,x
 514  dc51 1609          	ldw	y,(OFST+5,sp)
 515  dc53 90bf07        	ldw	c_y,y
 516  dc56 ae0006        	ldw	x,#6
 517  dc59               L62:
 518  dc59 5a            	decw	x
 519  dc5a 92d607        	ld	a,([c_y.w],x)
 520  dc5d 92d704        	ld	([c_x.w],x),a
 521  dc60 5d            	tnzw	x
 522  dc61 26f6          	jrne	L62
 523                     ; 241   tabptr->time = arptime;
 525                     ; 242 }
 526  dc63               L03:
 528  dc63 1e03          	ldw	x,(OFST-1,sp)
 529  dc65 c60562        	ld	a,L72_arptime
 530  dc68 e70a          	ld	(10,x),a
 533  dc6a 5b06          	addw	sp,#6
 534  dc6c 81            	ret	
 563                     ; 269 uip_arp_arpin(void)
 563                     ; 270 {
 564                     	switch	.text
 565  dc6d               _uip_arp_arpin:
 569                     ; 271   if(uip_len < sizeof(struct arp_hdr)) {
 571  dc6d ce01d7        	ldw	x,_uip_len
 572  dc70 a3002a        	cpw	x,#42
 573  dc73 5f            	clrw	x
 574  dc74 2404          	jruge	L142
 575                     ; 272     uip_len = 0;
 577  dc76 cf01d7        	ldw	_uip_len,x
 578                     ; 273     return;
 581  dc79 81            	ret	
 582  dc7a               L142:
 583                     ; 275   uip_len = 0;
 585  dc7a cf01d7        	ldw	_uip_len,x
 586                     ; 277   switch(BUF->opcode) {
 588  dc7d ce01ef        	ldw	x,_uip_buf+20
 590                     ; 310     break;
 591  dc80 5a            	decw	x
 592  dc81 2704          	jreq	L522
 593  dc83 5a            	decw	x
 594  dc84 277a          	jreq	L722
 596  dc86 81            	ret	
 597  dc87               L522:
 598                     ; 278   case HTONS(ARP_REQUEST):
 598                     ; 279     /* ARP request. If it asked for our address, we send out a
 598                     ; 280        reply. */
 598                     ; 281     if(uip_ipaddr_cmp(BUF->dipaddr, uip_hostaddr)) {
 600  dc87 ce0201        	ldw	x,_uip_buf+38
 601  dc8a c30084        	cpw	x,_uip_hostaddr
 602  dc8d 2703ccdd1b    	jrne	L542
 604  dc92 ce0203        	ldw	x,_uip_buf+40
 605  dc95 c30086        	cpw	x,_uip_hostaddr+2
 606  dc98 26f5          	jrne	L542
 607                     ; 285       uip_arp_update(BUF->sipaddr, &BUF->shwaddr);
 609  dc9a ae01f1        	ldw	x,#_uip_buf+22
 610  dc9d 89            	pushw	x
 611  dc9e ae01f7        	ldw	x,#_uip_buf+28
 612  dca1 cddb62        	call	L531_uip_arp_update
 614  dca4 85            	popw	x
 615                     ; 288       BUF->opcode = HTONS(2);
 617  dca5 ae0002        	ldw	x,#2
 618  dca8 cf01ef        	ldw	_uip_buf+20,x
 619                     ; 290       memcpy(BUF->dhwaddr.addr, BUF->shwaddr.addr, 6);
 621  dcab ae0006        	ldw	x,#6
 622  dcae               L63:
 623  dcae d601f0        	ld	a,(_uip_buf+21,x)
 624  dcb1 d701fa        	ld	(_uip_buf+31,x),a
 625  dcb4 5a            	decw	x
 626  dcb5 26f7          	jrne	L63
 627                     ; 291       memcpy(BUF->shwaddr.addr, uip_ethaddr.addr, 6);
 629  dcb7 ae0006        	ldw	x,#6
 630  dcba               L04:
 631  dcba d60009        	ld	a,(_uip_ethaddr-1,x)
 632  dcbd d701f0        	ld	(_uip_buf+21,x),a
 633  dcc0 5a            	decw	x
 634  dcc1 26f7          	jrne	L04
 635                     ; 292       memcpy(BUF->ethhdr.src.addr, uip_ethaddr.addr, 6);
 637  dcc3 ae0006        	ldw	x,#6
 638  dcc6               L24:
 639  dcc6 d60009        	ld	a,(_uip_ethaddr-1,x)
 640  dcc9 d701e0        	ld	(_uip_buf+5,x),a
 641  dccc 5a            	decw	x
 642  dccd 26f7          	jrne	L24
 643                     ; 293       memcpy(BUF->ethhdr.dest.addr, BUF->dhwaddr.addr, 6);
 645  dccf ae0006        	ldw	x,#6
 646  dcd2               L44:
 647  dcd2 d601fa        	ld	a,(_uip_buf+31,x)
 648  dcd5 d701da        	ld	(_uip_buf-1,x),a
 649  dcd8 5a            	decw	x
 650  dcd9 26f7          	jrne	L44
 651                     ; 295       BUF->dipaddr[0] = BUF->sipaddr[0];
 653  dcdb ce01f7        	ldw	x,_uip_buf+28
 654  dcde cf0201        	ldw	_uip_buf+38,x
 655                     ; 296       BUF->dipaddr[1] = BUF->sipaddr[1];
 657  dce1 ce01f9        	ldw	x,_uip_buf+30
 658  dce4 cf0203        	ldw	_uip_buf+40,x
 659                     ; 297       BUF->sipaddr[0] = uip_hostaddr[0];
 661  dce7 ce0084        	ldw	x,_uip_hostaddr
 662  dcea cf01f7        	ldw	_uip_buf+28,x
 663                     ; 298       BUF->sipaddr[1] = uip_hostaddr[1];
 665  dced ce0086        	ldw	x,_uip_hostaddr+2
 666  dcf0 cf01f9        	ldw	_uip_buf+30,x
 667                     ; 300       BUF->ethhdr.type = HTONS(UIP_ETHTYPE_ARP);
 669  dcf3 ae0806        	ldw	x,#2054
 670  dcf6 cf01e7        	ldw	_uip_buf+12,x
 671                     ; 301       uip_len = sizeof(struct arp_hdr);
 673  dcf9 ae002a        	ldw	x,#42
 674  dcfc cf01d7        	ldw	_uip_len,x
 676  dcff 81            	ret	
 677  dd00               L722:
 678                     ; 304   case HTONS(ARP_REPLY):
 678                     ; 305     /* ARP reply. We insert or update the ARP table if it was meant
 678                     ; 306        for us. */
 678                     ; 307     if(uip_ipaddr_cmp(BUF->dipaddr, uip_hostaddr)) {
 680  dd00 ce0201        	ldw	x,_uip_buf+38
 681  dd03 c30084        	cpw	x,_uip_hostaddr
 682  dd06 2613          	jrne	L542
 684  dd08 ce0203        	ldw	x,_uip_buf+40
 685  dd0b c30086        	cpw	x,_uip_hostaddr+2
 686  dd0e 260b          	jrne	L542
 687                     ; 308       uip_arp_update(BUF->sipaddr, &BUF->shwaddr);
 689  dd10 ae01f1        	ldw	x,#_uip_buf+22
 690  dd13 89            	pushw	x
 691  dd14 ae01f7        	ldw	x,#_uip_buf+28
 692  dd17 cddb62        	call	L531_uip_arp_update
 694  dd1a 85            	popw	x
 695  dd1b               L542:
 696                     ; 313   return;
 699  dd1b 81            	ret	
 750                     ; 346 uip_arp_out(void)
 750                     ; 347 {
 751                     	switch	.text
 752  dd1c               _uip_arp_out:
 754       00000002      OFST:	set	2
 757                     ; 358   if(uip_ipaddr_cmp(IPBUF->destipaddr, broadcast_ipaddr)) {
 759  dd1c ce01f9        	ldw	x,_uip_buf+30
 760  dd1f c3ace8        	cpw	x,L51_broadcast_ipaddr
 761  dd22 2617          	jrne	L372
 763  dd24 ce01fb        	ldw	x,_uip_buf+32
 764  dd27 c3acea        	cpw	x,L51_broadcast_ipaddr+2
 765  dd2a 260f          	jrne	L372
 766                     ; 359     memcpy(IPBUF->ethhdr.dest.addr, broadcast_ethaddr.addr, 6);
 768  dd2c ae0006        	ldw	x,#6
 769  dd2f               L25:
 770  dd2f d6ace1        	ld	a,(L31_broadcast_ethaddr-1,x)
 771  dd32 d701da        	ld	(_uip_buf-1,x),a
 772  dd35 5a            	decw	x
 773  dd36 26f7          	jrne	L25
 775  dd38 ccde4b        	jra	L572
 776  dd3b               L372:
 777                     ; 363     if(!uip_ipaddr_maskcmp(IPBUF->destipaddr, uip_hostaddr, uip_netmask)) {
 779  dd3b ce01f9        	ldw	x,_uip_buf+30
 780  dd3e 01            	rrwa	x,a
 781  dd3f c40081        	and	a,_uip_netmask+1
 782  dd42 01            	rrwa	x,a
 783  dd43 c40080        	and	a,_uip_netmask
 784  dd46 01            	rrwa	x,a
 785  dd47 90ce0084      	ldw	y,_uip_hostaddr
 786  dd4b 9001          	rrwa	y,a
 787  dd4d c40081        	and	a,_uip_netmask+1
 788  dd50 9001          	rrwa	y,a
 789  dd52 c40080        	and	a,_uip_netmask
 790  dd55 9001          	rrwa	y,a
 791  dd57 90bf07        	ldw	c_y,y
 792  dd5a b307          	cpw	x,c_y
 793  dd5c 2623          	jrne	L303
 795  dd5e ce01fb        	ldw	x,_uip_buf+32
 796  dd61 01            	rrwa	x,a
 797  dd62 c40083        	and	a,_uip_netmask+3
 798  dd65 01            	rrwa	x,a
 799  dd66 c40082        	and	a,_uip_netmask+2
 800  dd69 01            	rrwa	x,a
 801  dd6a 90ce0086      	ldw	y,_uip_hostaddr+2
 802  dd6e 9001          	rrwa	y,a
 803  dd70 c40083        	and	a,_uip_netmask+3
 804  dd73 9001          	rrwa	y,a
 805  dd75 c40082        	and	a,_uip_netmask+2
 806  dd78 9001          	rrwa	y,a
 807  dd7a 90bf07        	ldw	c_y,y
 808  dd7d b307          	cpw	x,c_y
 809  dd7f 2731          	jreq	L113
 810  dd81               L303:
 811                     ; 367       uip_ipaddr_copy(ipaddr, uip_draddr);
 813  dd81 ce007c        	ldw	x,_uip_draddr
 814  dd84 cf0565        	ldw	L12_ipaddr,x
 817  dd87 ce007e        	ldw	x,_uip_draddr+2
 819  dd8a               L703:
 820  dd8a cf0567        	ldw	L12_ipaddr+2,x
 821                     ; 374     for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 823  dd8d 4f            	clr	a
 824  dd8e c70564        	ld	L32_i,a
 825  dd91               L513:
 826                     ; 375       tabptr = &arp_table[i];
 828  dd91 97            	ld	xl,a
 829  dd92 a60b          	ld	a,#11
 830  dd94 42            	mul	x,a
 831  dd95 1c0569        	addw	x,#L71_arp_table
 833                     ; 376       if(uip_ipaddr_cmp(ipaddr, tabptr->ipaddr)) {
 835  dd98 9093          	ldw	y,x
 836  dd9a 90fe          	ldw	y,(y)
 837  dd9c 90c30565      	cpw	y,L12_ipaddr
 838  dda0 261b          	jrne	L323
 840  dda2 9093          	ldw	y,x
 841  dda4 90ee02        	ldw	y,(2,y)
 842  dda7 90c30567      	cpw	y,L12_ipaddr+2
 843  ddab 2610          	jrne	L323
 844                     ; 377 	break;
 846  ddad c60564        	ld	a,L32_i
 847  ddb0 2016          	jra	L123
 848  ddb2               L113:
 849                     ; 371       uip_ipaddr_copy(ipaddr, IPBUF->destipaddr);
 851  ddb2 ce01f9        	ldw	x,_uip_buf+30
 852  ddb5 cf0565        	ldw	L12_ipaddr,x
 855  ddb8 ce01fb        	ldw	x,_uip_buf+32
 856  ddbb 20cd          	jra	L703
 857  ddbd               L323:
 858                     ; 374     for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 860  ddbd 725c0564      	inc	L32_i
 863  ddc1 c60564        	ld	a,L32_i
 864  ddc4 a108          	cp	a,#8
 865  ddc6 25c9          	jrult	L513
 866  ddc8               L123:
 867                     ; 381     if(i == UIP_ARPTAB_SIZE) {
 869  ddc8 a108          	cp	a,#8
 870  ddca 266d          	jrne	L523
 871                     ; 385       memset(BUF->ethhdr.dest.addr, 0xff, 6);
 873  ddcc a6ff          	ld	a,#255
 874  ddce ae0006        	ldw	x,#6
 875  ddd1               L45:
 876  ddd1 d701da        	ld	(_uip_buf-1,x),a
 877  ddd4 5a            	decw	x
 878  ddd5 26fa          	jrne	L45
 879                     ; 386       memset(BUF->dhwaddr.addr, 0x00, 6);
 881  ddd7 ae0006        	ldw	x,#6
 882  ddda               L65:
 883  ddda 724f01fa      	clr	(_uip_buf+31,x)
 884  ddde 5a            	decw	x
 885  dddf 26f9          	jrne	L65
 886                     ; 387       memcpy(BUF->ethhdr.src.addr, uip_ethaddr.addr, 6);
 888  dde1 ae0006        	ldw	x,#6
 889  dde4               L06:
 890  dde4 d60009        	ld	a,(_uip_ethaddr-1,x)
 891  dde7 d701e0        	ld	(_uip_buf+5,x),a
 892  ddea 5a            	decw	x
 893  ddeb 26f7          	jrne	L06
 894                     ; 388       memcpy(BUF->shwaddr.addr, uip_ethaddr.addr, 6);
 896  dded ae0006        	ldw	x,#6
 897  ddf0               L26:
 898  ddf0 d60009        	ld	a,(_uip_ethaddr-1,x)
 899  ddf3 d701f0        	ld	(_uip_buf+21,x),a
 900  ddf6 5a            	decw	x
 901  ddf7 26f7          	jrne	L26
 902                     ; 390       uip_ipaddr_copy(BUF->dipaddr, ipaddr);
 904  ddf9 ce0565        	ldw	x,L12_ipaddr
 905  ddfc cf0201        	ldw	_uip_buf+38,x
 908  ddff ce0567        	ldw	x,L12_ipaddr+2
 909  de02 cf0203        	ldw	_uip_buf+40,x
 910                     ; 391       uip_ipaddr_copy(BUF->sipaddr, uip_hostaddr);
 912  de05 ce0084        	ldw	x,_uip_hostaddr
 913  de08 cf01f7        	ldw	_uip_buf+28,x
 916  de0b ce0086        	ldw	x,_uip_hostaddr+2
 917  de0e cf01f9        	ldw	_uip_buf+30,x
 918                     ; 392       BUF->opcode = HTONS(ARP_REQUEST); /* ARP request. */
 920  de11 ae0001        	ldw	x,#1
 921  de14 cf01ef        	ldw	_uip_buf+20,x
 922                     ; 393       BUF->hwtype = HTONS(ARP_HWTYPE_ETH);
 924  de17 cf01e9        	ldw	_uip_buf+14,x
 925                     ; 394       BUF->protocol = HTONS(UIP_ETHTYPE_IP);
 927  de1a ae0800        	ldw	x,#2048
 928  de1d cf01eb        	ldw	_uip_buf+16,x
 929                     ; 395       BUF->hwlen = 6;
 931  de20 350601ed      	mov	_uip_buf+18,#6
 932                     ; 396       BUF->protolen = 4;
 934  de24 350401ee      	mov	_uip_buf+19,#4
 935                     ; 397       BUF->ethhdr.type = HTONS(UIP_ETHTYPE_ARP);
 937  de28 ae0806        	ldw	x,#2054
 938  de2b cf01e7        	ldw	_uip_buf+12,x
 939                     ; 399       uip_appdata = &uip_buf[UIP_TCPIP_HLEN + UIP_LLH_LEN];
 941  de2e ae0211        	ldw	x,#_uip_buf+54
 942  de31 cf01d9        	ldw	_uip_appdata,x
 943                     ; 401       uip_len = sizeof(struct arp_hdr);
 945  de34 ae002a        	ldw	x,#42
 946                     ; 402       return;
 948  de37 202a          	jra	L07
 949  de39               L523:
 950                     ; 406     memcpy(IPBUF->ethhdr.dest.addr, tabptr->ethaddr.addr, 6);
 952  de39 1c0004        	addw	x,#4
 953  de3c bf04          	ldw	c_x,x
 954  de3e ae0006        	ldw	x,#6
 955  de41               L46:
 956  de41 5a            	decw	x
 957  de42 92d604        	ld	a,([c_x.w],x)
 958  de45 d701db        	ld	(_uip_buf,x),a
 959  de48 5d            	tnzw	x
 960  de49 26f6          	jrne	L46
 961  de4b               L572:
 962                     ; 408   memcpy(IPBUF->ethhdr.src.addr, uip_ethaddr.addr, 6);
 964  de4b ae0006        	ldw	x,#6
 965  de4e               L66:
 966  de4e d60009        	ld	a,(_uip_ethaddr-1,x)
 967  de51 d701e0        	ld	(_uip_buf+5,x),a
 968  de54 5a            	decw	x
 969  de55 26f7          	jrne	L66
 970                     ; 410   IPBUF->ethhdr.type = HTONS(UIP_ETHTYPE_IP);
 972  de57 ae0800        	ldw	x,#2048
 973  de5a cf01e7        	ldw	_uip_buf+12,x
 974                     ; 412   uip_len += sizeof(struct uip_eth_hdr);
 976  de5d ce01d7        	ldw	x,_uip_len
 977  de60 1c000e        	addw	x,#14
 978                     ; 413 }
 979  de63               L07:
 980  de63 cf01d7        	ldw	_uip_len,x
 983  de66 81            	ret	
1068                     	switch	.bss
1069  0561               L13_tmpage:
1070  0561 00            	ds.b	1
1071  0562               L72_arptime:
1072  0562 00            	ds.b	1
1073  0563               L52_c:
1074  0563 00            	ds.b	1
1075  0564               L32_i:
1076  0564 00            	ds.b	1
1077  0565               L12_ipaddr:
1078  0565 00000000      	ds.b	4
1079  0569               L71_arp_table:
1080  0569 000000000000  	ds.b	88
1081                     	xdef	_uip_arp_timer
1082                     	xdef	_uip_arp_out
1083                     	xdef	_uip_arp_arpin
1084                     	xdef	_uip_arp_init
1085                     	xref	_uip_ethaddr
1086                     	xref	_uip_draddr
1087                     	xref	_uip_netmask
1088                     	xref	_uip_hostaddr
1089                     	xref	_uip_len
1090                     	xref	_uip_appdata
1091                     	xref	_uip_buf
1092                     	xref.b	c_x
1093                     	xref.b	c_y
1113                     	end
