   1                     ; C Compiler for STM8 (COSMIC Software)
   2                     ; Parser V4.11.14 - 18 Nov 2019
   3                     ; Generator (Limited) V4.4.11 - 19 Nov 2019
   4                     ; Optimizer V4.4.11 - 19 Nov 2019
  17                     .const:	section	.text
  18  bf2a               L31_broadcast_ethaddr:
  19  bf2a ff            	dc.b	255
  20  bf2b ff            	dc.b	255
  21  bf2c ff            	dc.b	255
  22  bf2d ff            	dc.b	255
  23  bf2e ff            	dc.b	255
  24  bf2f ff            	dc.b	255
  25  bf30               L51_broadcast_ipaddr:
  26  bf30 ffff          	dc.w	-1
  27  bf32 ffff          	dc.w	-1
  59                     ; 144 uip_arp_init(void)
  59                     ; 145 {
  61                     	switch	.text
  62  f010               _uip_arp_init:
  66                     ; 146   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
  68  f010 4f            	clr	a
  69  f011 c70438        	ld	L32_i,a
  70  f014               L15:
  71                     ; 147     memset(arp_table[i].ipaddr, 0, 4);
  73  f014 97            	ld	xl,a
  74  f015 a60b          	ld	a,#11
  75  f017 42            	mul	x,a
  76  f018 1c043d        	addw	x,#L71_arp_table
  77  f01b bf04          	ldw	c_x,x
  78  f01d ae0004        	ldw	x,#4
  79  f020               L6:
  80  f020 5a            	decw	x
  81  f021 926f04        	clr	([c_x.w],x)
  82  f024 5d            	tnzw	x
  83  f025 26f9          	jrne	L6
  84                     ; 146   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
  86  f027 725c0438      	inc	L32_i
  89  f02b c60438        	ld	a,L32_i
  90  f02e a108          	cp	a,#8
  91  f030 25e2          	jrult	L15
  92                     ; 149 }
  95  f032 81            	ret	
 187                     ; 162 uip_arp_timer(void)
 187                     ; 163 {
 188                     	switch	.text
 189  f033               _uip_arp_timer:
 191  f033 89            	pushw	x
 192       00000002      OFST:	set	2
 195                     ; 166   ++arptime;
 197  f034 725c0436      	inc	L72_arptime
 198                     ; 167   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 200  f038 4f            	clr	a
 201  f039 c70438        	ld	L32_i,a
 202  f03c               L521:
 203                     ; 168     tabptr = &arp_table[i];
 205  f03c 97            	ld	xl,a
 206  f03d a60b          	ld	a,#11
 207  f03f 42            	mul	x,a
 208  f040 1c043d        	addw	x,#L71_arp_table
 209  f043 1f01          	ldw	(OFST-1,sp),x
 211                     ; 169     if((tabptr->ipaddr[0] | tabptr->ipaddr[1]) != 0 &&
 211                     ; 170        arptime - tabptr->time >= UIP_ARP_MAXAGE) {
 213  f045 1601          	ldw	y,(OFST-1,sp)
 214  f047 ee02          	ldw	x,(2,x)
 215  f049 01            	rrwa	x,a
 216  f04a 90ea01        	or	a,(1,y)
 217  f04d 01            	rrwa	x,a
 218  f04e 90fa          	or	a,(y)
 219  f050 01            	rrwa	x,a
 220  f051 5d            	tnzw	x
 221  f052 271e          	jreq	L331
 223  f054 c60436        	ld	a,L72_arptime
 224  f057 5f            	clrw	x
 225  f058 90e00a        	sub	a,(10,y)
 226  f05b 2401          	jrnc	L21
 227  f05d 5a            	decw	x
 228  f05e               L21:
 229  f05e 02            	rlwa	x,a
 230  f05f a30078        	cpw	x,#120
 231  f062 2f0e          	jrslt	L331
 232                     ; 171       memset(tabptr->ipaddr, 0, 4);
 234  f064 1e01          	ldw	x,(OFST-1,sp)
 235  f066 bf04          	ldw	c_x,x
 236  f068 ae0004        	ldw	x,#4
 237  f06b               L41:
 238  f06b 5a            	decw	x
 239  f06c 926f04        	clr	([c_x.w],x)
 240  f06f 5d            	tnzw	x
 241  f070 26f9          	jrne	L41
 242  f072               L331:
 243                     ; 167   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 245  f072 725c0438      	inc	L32_i
 248  f076 c60438        	ld	a,L32_i
 249  f079 a108          	cp	a,#8
 250  f07b 25bf          	jrult	L521
 251                     ; 175 }
 254  f07d 85            	popw	x
 255  f07e 81            	ret	
 320                     ; 179 uip_arp_update(uint16_t *ipaddr, struct uip_eth_addr *ethaddr)
 320                     ; 180 {
 321                     	switch	.text
 322  f07f               L531_uip_arp_update:
 324  f07f 89            	pushw	x
 325  f080 5204          	subw	sp,#4
 326       00000004      OFST:	set	4
 329                     ; 185   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 331  f082 4f            	clr	a
 332  f083 c70438        	ld	L32_i,a
 333  f086               L171:
 334                     ; 187     tabptr = &arp_table[i];
 336  f086 97            	ld	xl,a
 337  f087 a60b          	ld	a,#11
 338  f089 42            	mul	x,a
 339  f08a 1c043d        	addw	x,#L71_arp_table
 340  f08d 1f03          	ldw	(OFST-1,sp),x
 342                     ; 189     if(tabptr->ipaddr[0] != 0 &&
 342                     ; 190        tabptr->ipaddr[1] != 0) {
 344  f08f e601          	ld	a,(1,x)
 345  f091 fa            	or	a,(x)
 346  f092 2733          	jreq	L771
 348  f094 e603          	ld	a,(3,x)
 349  f096 ea02          	or	a,(2,x)
 350  f098 272d          	jreq	L771
 351                     ; 194       if(ipaddr[0] == tabptr->ipaddr[0] &&
 351                     ; 195 	 ipaddr[1] == tabptr->ipaddr[1]) {
 353  f09a 1e05          	ldw	x,(OFST+1,sp)
 354  f09c 1603          	ldw	y,(OFST-1,sp)
 355  f09e fe            	ldw	x,(x)
 356  f09f 90f3          	cpw	x,(y)
 357  f0a1 2624          	jrne	L771
 359  f0a3 1e05          	ldw	x,(OFST+1,sp)
 360  f0a5 ee02          	ldw	x,(2,x)
 361  f0a7 90e302        	cpw	x,(2,y)
 362  f0aa 261b          	jrne	L771
 363                     ; 198 	memcpy(tabptr->ethaddr.addr, ethaddr->addr, 6);
 365  f0ac 93            	ldw	x,y
 366  f0ad 1c0004        	addw	x,#4
 367  f0b0 bf04          	ldw	c_x,x
 368  f0b2 1609          	ldw	y,(OFST+5,sp)
 369  f0b4 90bf07        	ldw	c_y,y
 370  f0b7 ae0006        	ldw	x,#6
 371  f0ba               L02:
 372  f0ba 5a            	decw	x
 373  f0bb 92d607        	ld	a,([c_y.w],x)
 374  f0be 92d704        	ld	([c_x.w],x),a
 375  f0c1 5d            	tnzw	x
 376  f0c2 26f6          	jrne	L02
 377                     ; 199 	tabptr->time = arptime;
 378                     ; 201 	return;
 380  f0c4 ccf180        	jra	L03
 381  f0c7               L771:
 382                     ; 185   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 384  f0c7 725c0438      	inc	L32_i
 387  f0cb c60438        	ld	a,L32_i
 388  f0ce a108          	cp	a,#8
 389  f0d0 25b4          	jrult	L171
 390                     ; 210   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 392  f0d2 4f            	clr	a
 393  f0d3 c70438        	ld	L32_i,a
 394  f0d6               L302:
 395                     ; 211     tabptr = &arp_table[i];
 397  f0d6 97            	ld	xl,a
 398  f0d7 a60b          	ld	a,#11
 399  f0d9 42            	mul	x,a
 400  f0da 1c043d        	addw	x,#L71_arp_table
 401  f0dd 1f03          	ldw	(OFST-1,sp),x
 403                     ; 212     if(tabptr->ipaddr[0] == 0 &&
 403                     ; 213        tabptr->ipaddr[1] == 0) {
 405  f0df e601          	ld	a,(1,x)
 406  f0e1 fa            	or	a,(x)
 407  f0e2 2606          	jrne	L112
 409  f0e4 e603          	ld	a,(3,x)
 410  f0e6 ea02          	or	a,(2,x)
 411  f0e8 270b          	jreq	L702
 412                     ; 214       break;
 414  f0ea               L112:
 415                     ; 210   for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 417  f0ea 725c0438      	inc	L32_i
 420  f0ee c60438        	ld	a,L32_i
 421  f0f1 a108          	cp	a,#8
 422  f0f3 25e1          	jrult	L302
 423  f0f5               L702:
 424                     ; 220   if(i == UIP_ARPTAB_SIZE) {
 426  f0f5 c60438        	ld	a,L32_i
 427  f0f8 a108          	cp	a,#8
 428  f0fa 2657          	jrne	L312
 429                     ; 221     tmpage = 0;
 431  f0fc 725f0435      	clr	L13_tmpage
 432                     ; 222     c = 0;
 434  f100 725f0437      	clr	L52_c
 435                     ; 223     for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 437  f104 4f            	clr	a
 438  f105 c70438        	ld	L32_i,a
 439  f108               L512:
 440                     ; 224       tabptr = &arp_table[i];
 442  f108 97            	ld	xl,a
 443  f109 a60b          	ld	a,#11
 444  f10b 42            	mul	x,a
 445  f10c 1c043d        	addw	x,#L71_arp_table
 446  f10f 1f03          	ldw	(OFST-1,sp),x
 448                     ; 225       if(arptime - tabptr->time > tmpage) {
 450  f111 5f            	clrw	x
 451  f112 c60435        	ld	a,L13_tmpage
 452  f115 97            	ld	xl,a
 453  f116 1f01          	ldw	(OFST-3,sp),x
 455  f118 5f            	clrw	x
 456  f119 1603          	ldw	y,(OFST-1,sp)
 457  f11b c60436        	ld	a,L72_arptime
 458  f11e 90e00a        	sub	a,(10,y)
 459  f121 2401          	jrnc	L22
 460  f123 5a            	decw	x
 461  f124               L22:
 462  f124 02            	rlwa	x,a
 463  f125 1301          	cpw	x,(OFST-3,sp)
 464  f127 2d10          	jrsle	L322
 465                     ; 226 	tmpage = (uint8_t)(arptime - tabptr->time);
 467  f129 1e03          	ldw	x,(OFST-1,sp)
 468  f12b e60a          	ld	a,(10,x)
 469  f12d c00436        	sub	a,L72_arptime
 470  f130 40            	neg	a
 471  f131 c70435        	ld	L13_tmpage,a
 472                     ; 227 	c = i;
 474  f134 5504380437    	mov	L52_c,L32_i
 475  f139               L322:
 476                     ; 223     for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 478  f139 725c0438      	inc	L32_i
 481  f13d c60438        	ld	a,L32_i
 482  f140 a108          	cp	a,#8
 483  f142 25c4          	jrult	L512
 484                     ; 230     i = c;
 486  f144 c60437        	ld	a,L52_c
 487  f147 c70438        	ld	L32_i,a
 488                     ; 231     tabptr = &arp_table[i];
 490  f14a 97            	ld	xl,a
 491  f14b a60b          	ld	a,#11
 492  f14d 42            	mul	x,a
 493  f14e 1c043d        	addw	x,#L71_arp_table
 494  f151 1f03          	ldw	(OFST-1,sp),x
 496  f153               L312:
 497                     ; 236   memcpy(tabptr->ipaddr, ipaddr, 4);
 499  f153 bf04          	ldw	c_x,x
 500  f155 1605          	ldw	y,(OFST+1,sp)
 501  f157 90bf07        	ldw	c_y,y
 502  f15a ae0004        	ldw	x,#4
 503  f15d               L42:
 504  f15d 5a            	decw	x
 505  f15e 92d607        	ld	a,([c_y.w],x)
 506  f161 92d704        	ld	([c_x.w],x),a
 507  f164 5d            	tnzw	x
 508  f165 26f6          	jrne	L42
 509                     ; 237   memcpy(tabptr->ethaddr.addr, ethaddr->addr, 6);
 511  f167 1e03          	ldw	x,(OFST-1,sp)
 512  f169 1c0004        	addw	x,#4
 513  f16c bf04          	ldw	c_x,x
 514  f16e 1609          	ldw	y,(OFST+5,sp)
 515  f170 90bf07        	ldw	c_y,y
 516  f173 ae0006        	ldw	x,#6
 517  f176               L62:
 518  f176 5a            	decw	x
 519  f177 92d607        	ld	a,([c_y.w],x)
 520  f17a 92d704        	ld	([c_x.w],x),a
 521  f17d 5d            	tnzw	x
 522  f17e 26f6          	jrne	L62
 523                     ; 238   tabptr->time = arptime;
 525                     ; 239 }
 526  f180               L03:
 528  f180 1e03          	ldw	x,(OFST-1,sp)
 529  f182 c60436        	ld	a,L72_arptime
 530  f185 e70a          	ld	(10,x),a
 533  f187 5b06          	addw	sp,#6
 534  f189 81            	ret	
 563                     ; 266 uip_arp_arpin(void)
 563                     ; 267 {
 564                     	switch	.text
 565  f18a               _uip_arp_arpin:
 569                     ; 268   if(uip_len < sizeof(struct arp_hdr)) {
 571  f18a ce01d7        	ldw	x,_uip_len
 572  f18d a3002a        	cpw	x,#42
 573  f190 5f            	clrw	x
 574  f191 2404          	jruge	L142
 575                     ; 269     uip_len = 0;
 577  f193 cf01d7        	ldw	_uip_len,x
 578                     ; 270     return;
 581  f196 81            	ret	
 582  f197               L142:
 583                     ; 272   uip_len = 0;
 585  f197 cf01d7        	ldw	_uip_len,x
 586                     ; 274   switch(BUF->opcode) {
 588  f19a ce01ef        	ldw	x,_uip_buf+20
 590                     ; 307     break;
 591  f19d 5a            	decw	x
 592  f19e 2704          	jreq	L522
 593  f1a0 5a            	decw	x
 594  f1a1 277a          	jreq	L722
 596  f1a3 81            	ret	
 597  f1a4               L522:
 598                     ; 275   case HTONS(ARP_REQUEST):
 598                     ; 276     /* ARP request. If it asked for our address, we send out a
 598                     ; 277        reply. */
 598                     ; 278     if(uip_ipaddr_cmp(BUF->dipaddr, uip_hostaddr)) {
 600  f1a4 ce0201        	ldw	x,_uip_buf+38
 601  f1a7 c30084        	cpw	x,_uip_hostaddr
 602  f1aa 2703ccf238    	jrne	L542
 604  f1af ce0203        	ldw	x,_uip_buf+40
 605  f1b2 c30086        	cpw	x,_uip_hostaddr+2
 606  f1b5 26f5          	jrne	L542
 607                     ; 282       uip_arp_update(BUF->sipaddr, &BUF->shwaddr);
 609  f1b7 ae01f1        	ldw	x,#_uip_buf+22
 610  f1ba 89            	pushw	x
 611  f1bb ae01f7        	ldw	x,#_uip_buf+28
 612  f1be cdf07f        	call	L531_uip_arp_update
 614  f1c1 85            	popw	x
 615                     ; 285       BUF->opcode = HTONS(2);
 617  f1c2 ae0002        	ldw	x,#2
 618  f1c5 cf01ef        	ldw	_uip_buf+20,x
 619                     ; 287       memcpy(BUF->dhwaddr.addr, BUF->shwaddr.addr, 6);
 621  f1c8 ae0006        	ldw	x,#6
 622  f1cb               L63:
 623  f1cb d601f0        	ld	a,(_uip_buf+21,x)
 624  f1ce d701fa        	ld	(_uip_buf+31,x),a
 625  f1d1 5a            	decw	x
 626  f1d2 26f7          	jrne	L63
 627                     ; 288       memcpy(BUF->shwaddr.addr, uip_ethaddr.addr, 6);
 629  f1d4 ae0006        	ldw	x,#6
 630  f1d7               L04:
 631  f1d7 d60009        	ld	a,(_uip_ethaddr-1,x)
 632  f1da d701f0        	ld	(_uip_buf+21,x),a
 633  f1dd 5a            	decw	x
 634  f1de 26f7          	jrne	L04
 635                     ; 289       memcpy(BUF->ethhdr.src.addr, uip_ethaddr.addr, 6);
 637  f1e0 ae0006        	ldw	x,#6
 638  f1e3               L24:
 639  f1e3 d60009        	ld	a,(_uip_ethaddr-1,x)
 640  f1e6 d701e0        	ld	(_uip_buf+5,x),a
 641  f1e9 5a            	decw	x
 642  f1ea 26f7          	jrne	L24
 643                     ; 290       memcpy(BUF->ethhdr.dest.addr, BUF->dhwaddr.addr, 6);
 645  f1ec ae0006        	ldw	x,#6
 646  f1ef               L44:
 647  f1ef d601fa        	ld	a,(_uip_buf+31,x)
 648  f1f2 d701da        	ld	(_uip_buf-1,x),a
 649  f1f5 5a            	decw	x
 650  f1f6 26f7          	jrne	L44
 651                     ; 292       BUF->dipaddr[0] = BUF->sipaddr[0];
 653  f1f8 ce01f7        	ldw	x,_uip_buf+28
 654  f1fb cf0201        	ldw	_uip_buf+38,x
 655                     ; 293       BUF->dipaddr[1] = BUF->sipaddr[1];
 657  f1fe ce01f9        	ldw	x,_uip_buf+30
 658  f201 cf0203        	ldw	_uip_buf+40,x
 659                     ; 294       BUF->sipaddr[0] = uip_hostaddr[0];
 661  f204 ce0084        	ldw	x,_uip_hostaddr
 662  f207 cf01f7        	ldw	_uip_buf+28,x
 663                     ; 295       BUF->sipaddr[1] = uip_hostaddr[1];
 665  f20a ce0086        	ldw	x,_uip_hostaddr+2
 666  f20d cf01f9        	ldw	_uip_buf+30,x
 667                     ; 297       BUF->ethhdr.type = HTONS(UIP_ETHTYPE_ARP);
 669  f210 ae0806        	ldw	x,#2054
 670  f213 cf01e7        	ldw	_uip_buf+12,x
 671                     ; 298       uip_len = sizeof(struct arp_hdr);
 673  f216 ae002a        	ldw	x,#42
 674  f219 cf01d7        	ldw	_uip_len,x
 676  f21c 81            	ret	
 677  f21d               L722:
 678                     ; 301   case HTONS(ARP_REPLY):
 678                     ; 302     /* ARP reply. We insert or update the ARP table if it was meant
 678                     ; 303        for us. */
 678                     ; 304     if(uip_ipaddr_cmp(BUF->dipaddr, uip_hostaddr)) {
 680  f21d ce0201        	ldw	x,_uip_buf+38
 681  f220 c30084        	cpw	x,_uip_hostaddr
 682  f223 2613          	jrne	L542
 684  f225 ce0203        	ldw	x,_uip_buf+40
 685  f228 c30086        	cpw	x,_uip_hostaddr+2
 686  f22b 260b          	jrne	L542
 687                     ; 305       uip_arp_update(BUF->sipaddr, &BUF->shwaddr);
 689  f22d ae01f1        	ldw	x,#_uip_buf+22
 690  f230 89            	pushw	x
 691  f231 ae01f7        	ldw	x,#_uip_buf+28
 692  f234 cdf07f        	call	L531_uip_arp_update
 694  f237 85            	popw	x
 695  f238               L542:
 696                     ; 310   return;
 699  f238 81            	ret	
 750                     ; 343 uip_arp_out(void)
 750                     ; 344 {
 751                     	switch	.text
 752  f239               _uip_arp_out:
 754       00000002      OFST:	set	2
 757                     ; 355   if(uip_ipaddr_cmp(IPBUF->destipaddr, broadcast_ipaddr)) {
 759  f239 ce01f9        	ldw	x,_uip_buf+30
 760  f23c c3bf30        	cpw	x,L51_broadcast_ipaddr
 761  f23f 2617          	jrne	L372
 763  f241 ce01fb        	ldw	x,_uip_buf+32
 764  f244 c3bf32        	cpw	x,L51_broadcast_ipaddr+2
 765  f247 260f          	jrne	L372
 766                     ; 356     memcpy(IPBUF->ethhdr.dest.addr, broadcast_ethaddr.addr, 6);
 768  f249 ae0006        	ldw	x,#6
 769  f24c               L25:
 770  f24c d6bf29        	ld	a,(L31_broadcast_ethaddr-1,x)
 771  f24f d701da        	ld	(_uip_buf-1,x),a
 772  f252 5a            	decw	x
 773  f253 26f7          	jrne	L25
 775  f255 ccf368        	jra	L572
 776  f258               L372:
 777                     ; 360     if(!uip_ipaddr_maskcmp(IPBUF->destipaddr, uip_hostaddr, uip_netmask)) {
 779  f258 ce01f9        	ldw	x,_uip_buf+30
 780  f25b 01            	rrwa	x,a
 781  f25c c40081        	and	a,_uip_netmask+1
 782  f25f 01            	rrwa	x,a
 783  f260 c40080        	and	a,_uip_netmask
 784  f263 01            	rrwa	x,a
 785  f264 90ce0084      	ldw	y,_uip_hostaddr
 786  f268 9001          	rrwa	y,a
 787  f26a c40081        	and	a,_uip_netmask+1
 788  f26d 9001          	rrwa	y,a
 789  f26f c40080        	and	a,_uip_netmask
 790  f272 9001          	rrwa	y,a
 791  f274 90bf07        	ldw	c_y,y
 792  f277 b307          	cpw	x,c_y
 793  f279 2623          	jrne	L303
 795  f27b ce01fb        	ldw	x,_uip_buf+32
 796  f27e 01            	rrwa	x,a
 797  f27f c40083        	and	a,_uip_netmask+3
 798  f282 01            	rrwa	x,a
 799  f283 c40082        	and	a,_uip_netmask+2
 800  f286 01            	rrwa	x,a
 801  f287 90ce0086      	ldw	y,_uip_hostaddr+2
 802  f28b 9001          	rrwa	y,a
 803  f28d c40083        	and	a,_uip_netmask+3
 804  f290 9001          	rrwa	y,a
 805  f292 c40082        	and	a,_uip_netmask+2
 806  f295 9001          	rrwa	y,a
 807  f297 90bf07        	ldw	c_y,y
 808  f29a b307          	cpw	x,c_y
 809  f29c 2731          	jreq	L113
 810  f29e               L303:
 811                     ; 364       uip_ipaddr_copy(ipaddr, uip_draddr);
 813  f29e ce007c        	ldw	x,_uip_draddr
 814  f2a1 cf0439        	ldw	L12_ipaddr,x
 817  f2a4 ce007e        	ldw	x,_uip_draddr+2
 819  f2a7               L703:
 820  f2a7 cf043b        	ldw	L12_ipaddr+2,x
 821                     ; 371     for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 823  f2aa 4f            	clr	a
 824  f2ab c70438        	ld	L32_i,a
 825  f2ae               L513:
 826                     ; 372       tabptr = &arp_table[i];
 828  f2ae 97            	ld	xl,a
 829  f2af a60b          	ld	a,#11
 830  f2b1 42            	mul	x,a
 831  f2b2 1c043d        	addw	x,#L71_arp_table
 833                     ; 373       if(uip_ipaddr_cmp(ipaddr, tabptr->ipaddr)) {
 835  f2b5 9093          	ldw	y,x
 836  f2b7 90fe          	ldw	y,(y)
 837  f2b9 90c30439      	cpw	y,L12_ipaddr
 838  f2bd 261b          	jrne	L323
 840  f2bf 9093          	ldw	y,x
 841  f2c1 90ee02        	ldw	y,(2,y)
 842  f2c4 90c3043b      	cpw	y,L12_ipaddr+2
 843  f2c8 2610          	jrne	L323
 844                     ; 374 	break;
 846  f2ca c60438        	ld	a,L32_i
 847  f2cd 2016          	jra	L123
 848  f2cf               L113:
 849                     ; 368       uip_ipaddr_copy(ipaddr, IPBUF->destipaddr);
 851  f2cf ce01f9        	ldw	x,_uip_buf+30
 852  f2d2 cf0439        	ldw	L12_ipaddr,x
 855  f2d5 ce01fb        	ldw	x,_uip_buf+32
 856  f2d8 20cd          	jra	L703
 857  f2da               L323:
 858                     ; 371     for(i = 0; i < UIP_ARPTAB_SIZE; ++i) {
 860  f2da 725c0438      	inc	L32_i
 863  f2de c60438        	ld	a,L32_i
 864  f2e1 a108          	cp	a,#8
 865  f2e3 25c9          	jrult	L513
 866  f2e5               L123:
 867                     ; 378     if(i == UIP_ARPTAB_SIZE) {
 869  f2e5 a108          	cp	a,#8
 870  f2e7 266d          	jrne	L523
 871                     ; 382       memset(BUF->ethhdr.dest.addr, 0xff, 6);
 873  f2e9 a6ff          	ld	a,#255
 874  f2eb ae0006        	ldw	x,#6
 875  f2ee               L45:
 876  f2ee d701da        	ld	(_uip_buf-1,x),a
 877  f2f1 5a            	decw	x
 878  f2f2 26fa          	jrne	L45
 879                     ; 383       memset(BUF->dhwaddr.addr, 0x00, 6);
 881  f2f4 ae0006        	ldw	x,#6
 882  f2f7               L65:
 883  f2f7 724f01fa      	clr	(_uip_buf+31,x)
 884  f2fb 5a            	decw	x
 885  f2fc 26f9          	jrne	L65
 886                     ; 384       memcpy(BUF->ethhdr.src.addr, uip_ethaddr.addr, 6);
 888  f2fe ae0006        	ldw	x,#6
 889  f301               L06:
 890  f301 d60009        	ld	a,(_uip_ethaddr-1,x)
 891  f304 d701e0        	ld	(_uip_buf+5,x),a
 892  f307 5a            	decw	x
 893  f308 26f7          	jrne	L06
 894                     ; 385       memcpy(BUF->shwaddr.addr, uip_ethaddr.addr, 6);
 896  f30a ae0006        	ldw	x,#6
 897  f30d               L26:
 898  f30d d60009        	ld	a,(_uip_ethaddr-1,x)
 899  f310 d701f0        	ld	(_uip_buf+21,x),a
 900  f313 5a            	decw	x
 901  f314 26f7          	jrne	L26
 902                     ; 387       uip_ipaddr_copy(BUF->dipaddr, ipaddr);
 904  f316 ce0439        	ldw	x,L12_ipaddr
 905  f319 cf0201        	ldw	_uip_buf+38,x
 908  f31c ce043b        	ldw	x,L12_ipaddr+2
 909  f31f cf0203        	ldw	_uip_buf+40,x
 910                     ; 388       uip_ipaddr_copy(BUF->sipaddr, uip_hostaddr);
 912  f322 ce0084        	ldw	x,_uip_hostaddr
 913  f325 cf01f7        	ldw	_uip_buf+28,x
 916  f328 ce0086        	ldw	x,_uip_hostaddr+2
 917  f32b cf01f9        	ldw	_uip_buf+30,x
 918                     ; 389       BUF->opcode = HTONS(ARP_REQUEST); /* ARP request. */
 920  f32e ae0001        	ldw	x,#1
 921  f331 cf01ef        	ldw	_uip_buf+20,x
 922                     ; 390       BUF->hwtype = HTONS(ARP_HWTYPE_ETH);
 924  f334 cf01e9        	ldw	_uip_buf+14,x
 925                     ; 391       BUF->protocol = HTONS(UIP_ETHTYPE_IP);
 927  f337 ae0800        	ldw	x,#2048
 928  f33a cf01eb        	ldw	_uip_buf+16,x
 929                     ; 392       BUF->hwlen = 6;
 931  f33d 350601ed      	mov	_uip_buf+18,#6
 932                     ; 393       BUF->protolen = 4;
 934  f341 350401ee      	mov	_uip_buf+19,#4
 935                     ; 394       BUF->ethhdr.type = HTONS(UIP_ETHTYPE_ARP);
 937  f345 ae0806        	ldw	x,#2054
 938  f348 cf01e7        	ldw	_uip_buf+12,x
 939                     ; 396       uip_appdata = &uip_buf[UIP_TCPIP_HLEN + UIP_LLH_LEN];
 941  f34b ae0211        	ldw	x,#_uip_buf+54
 942  f34e cf01d9        	ldw	_uip_appdata,x
 943                     ; 398       uip_len = sizeof(struct arp_hdr);
 945  f351 ae002a        	ldw	x,#42
 946                     ; 399       return;
 948  f354 202a          	jra	L07
 949  f356               L523:
 950                     ; 403     memcpy(IPBUF->ethhdr.dest.addr, tabptr->ethaddr.addr, 6);
 952  f356 1c0004        	addw	x,#4
 953  f359 bf04          	ldw	c_x,x
 954  f35b ae0006        	ldw	x,#6
 955  f35e               L46:
 956  f35e 5a            	decw	x
 957  f35f 92d604        	ld	a,([c_x.w],x)
 958  f362 d701db        	ld	(_uip_buf,x),a
 959  f365 5d            	tnzw	x
 960  f366 26f6          	jrne	L46
 961  f368               L572:
 962                     ; 405   memcpy(IPBUF->ethhdr.src.addr, uip_ethaddr.addr, 6);
 964  f368 ae0006        	ldw	x,#6
 965  f36b               L66:
 966  f36b d60009        	ld	a,(_uip_ethaddr-1,x)
 967  f36e d701e0        	ld	(_uip_buf+5,x),a
 968  f371 5a            	decw	x
 969  f372 26f7          	jrne	L66
 970                     ; 407   IPBUF->ethhdr.type = HTONS(UIP_ETHTYPE_IP);
 972  f374 ae0800        	ldw	x,#2048
 973  f377 cf01e7        	ldw	_uip_buf+12,x
 974                     ; 409   uip_len += sizeof(struct uip_eth_hdr);
 976  f37a ce01d7        	ldw	x,_uip_len
 977  f37d 1c000e        	addw	x,#14
 978                     ; 410 }
 979  f380               L07:
 980  f380 cf01d7        	ldw	_uip_len,x
 983  f383 81            	ret	
1068                     	switch	.bss
1069  0435               L13_tmpage:
1070  0435 00            	ds.b	1
1071  0436               L72_arptime:
1072  0436 00            	ds.b	1
1073  0437               L52_c:
1074  0437 00            	ds.b	1
1075  0438               L32_i:
1076  0438 00            	ds.b	1
1077  0439               L12_ipaddr:
1078  0439 00000000      	ds.b	4
1079  043d               L71_arp_table:
1080  043d 000000000000  	ds.b	88
1081                     	xdef	_uip_arp_timer
1082                     	xdef	_uip_arp_out
1083                     	xdef	_uip_arp_arpin
1084                     	xdef	_uip_arp_init
1085                     	xref	_uip_ethaddr
1086                     	xref	_uip_draddr
1087                     	xref	_uip_netmask
1088                     	xref	_uip_hostaddr
1089                     	xref	_uip_len
1090                     	xref	_uip_appdata
1091                     	xref	_uip_buf
1092                     	xref.b	c_x
1093                     	xref.b	c_y
1113                     	end
